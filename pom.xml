<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.tim</groupId>
    <artifactId>mimi-cache</artifactId>
	<description>高性能、高并发、低侵入性的分布式多级缓存框架</description>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>spring mini-cache</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.9.RELEASE</version>
		<relativePath />
	</parent>
	
	<modules>
		<module>mini-cache-spring-cache</module>
    </modules>
	
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<!--第三方依赖库-->
		<java.version>1.8</java.version>
		<hutool-all>5.3.7</hutool-all>
		<guava-version>29.0-jre</guava-version>
		<protostuff.version>1.1.3</protostuff.version>
		<ctrip.apollo>1.4.0</ctrip.apollo>
		<swagger.version>2.8.0</swagger.version>
		<fastjson.version>1.2.58</fastjson.version>
		<jxls.version>1.0.6</jxls.version>
		<!--数据库、缓存-->
		<mybatisplus.version>3.1.1</mybatisplus.version>
		<mysql.version>6.0.6</mysql.version>
		<org.redisson>3.10.0</org.redisson>
		<!--文档类-->
		<easypoi.version>4.0.0</easypoi.version>
		<orika.version>1.5.2</orika.version>
		<org.hibernate.validator>5.3.6.Final</org.hibernate.validator>
		<micrometer-registry-prometheus.version>1.1.2</micrometer-registry-prometheus.version>
		<netty.version>4.1.36.Final</netty.version>
		<okhttp.version>3.11.0</okhttp.version>
		<springsideutil.version>5.0.0-RC1</springsideutil.version>
		<mapstruct>1.2.0.Final</mapstruct>
		<!--日志相关-->
		<!--<ch.qos.logback.version>1.2.3</ch.qos.logback.version>
		<logback-encoder.version>5.3</logback-encoder.version>-->
		<!--测试相关-->
		<jmockit.version>1.46</jmockit.version>
		<junit.version>4.12</junit.version>
		<kafka-clients.version>2.5.1</kafka-clients.version>
		<rocketmq.version>4.5.2</rocketmq.version>
		<xxl-job.version>2.1.2</xxl-job.version>
		<prometheus.version>1.1.2</prometheus.version>
	</properties>
	
	<!-- 指定springcloud仓库 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>0.2.2.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- 仓库管理[远程]，可按设定的顺序查找依赖 -->
	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<!-- 如有Nexus私服, 取消注释并指向正确的服务器地址. -->
		<repository>
			<id>maven-ali</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<build>
		<!-- 插件管理 Maven Docker File -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>1.4.13</version>
					<executions>
						<execution>
							<id>docker</id>
							<phase>deploy</phase>
							<goals>
								<goal>build</goal>
								<goal>push</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!--maven 编译插件 将打包项目成jar，会寻找对应的main class-->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
			</plugins>
		</pluginManagement>

		<!-- 资源收集 -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<!-- 插件配置 -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${maven.compiler.encoding}</encoding>
				</configuration>
			</plugin>
			<!--打包跳过测试-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.6.0.1398</version>
            </plugin>
		</plugins>
	</build>
</project>